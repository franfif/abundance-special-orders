#name: CI_CD_Pipelines
#
#on: [ push, pull_request ]
#
#jobs:
#  build-and-test:
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [ '3.10' ]
#
#    services:
#      db:
#        image: postgres
#        env:
#          POSTGRES_DB: ${{ secrets.DB_NAME}}
#          POSTGRES_USER: ${{ secrets.DB_USER}}
#          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
#        ports:
#          - 5432:5432
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install Dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#    # -
#    #   name: Run Flake8
#    #   run: |
#    #     flake8
#    # -
#    #   name: Run Tests
#    #   run: |
#    #     pytest
#
#  containerization:
#    needs: build-and-test
#    if: github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - uses: actions/checkout@v4
#      - name: Get the commit SHA
#        shell: bash
#        run: echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          push: true
#          platforms: linux/arm64/v8, linux/amd64
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/abundance:${{ env.sha_short }}
#          context: .
#          secrets: |
#            SECRET_KEY=${{ secrets.SECRET_KEY }}
#            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
#            DEBUG=${{ secrets.DEBUG }}
#            DB_NAME=${{ secrets.DB_NAME}}
#            DB_USER=${{ secrets.DB_USER}}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_PORT=${{ secrets.DB_PORT }}
#        env:
#          SECRET_KEY: ${{ secrets.SECRET_KEY }}
#          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
#          DEBUG: ${{ secrets.DEBUG }}
#          DB_NAME: ${{ secrets.DB_NAME}}
#          DB_USER: ${{ secrets.DB_USER}}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#          DB_HOST: ${{ secrets.DB_HOST }}
#          DB_PORT: ${{ secrets.DB_PORT }}
