/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/filters.js":
/*!***********************************!*\
  !*** ./assets/scripts/filters.js ***!
  \***********************************/
/***/ (() => {

eval("// const filter_order_vendor = $('#id_vendor')[0]\n// const filter_order_customer = $('#id_customer_full_info')[0]\n// const filter_order_status = $('#id_status')[0]\n// const filter_order_bottle_deposit = $('#id_has_bottle_deposit')[0]\n// const filter_order_paid = $('#id_paid')[0]\n// const filter_order_stand_by = $('#id_is_stand_by')[0]\n// const filter_order_cancelled = $('#id_is_cancelled')[0]\n\nconst order_cards = $('.order-card')\nconst form_fields = $('.form-select, .filter input')\nconsole.log(\"form_fields: \", form_fields)\nconst filter_values = {}\nfor (const field of form_fields) {\n    filter_values[field.name] = field.value\n}\n\n// console.log(\"order_cards: \", order_cards)\n// if one of these filter fields is updated/changed, only show the orders that match the filter\nfor (const field of form_fields) {\n\n    field.addEventListener('change', (event) => {\n        filter_values[field.name] = field.value\n        filterOrders()\n    });\n}\n\nfunction filterOrders() {\n    // console.log(\"vendorId: \", vendorId)\n    console.log(\"order_cards: \", order_cards)\n    console.log(\"form_fields: \", form_fields)\n    jQuery.each(order_cards, function (index, card) {\n        console.log(\"card: \", card)\n        // console.log(\"order.dataset.vendorId: \", card.dataset.vendorId)\n        // console.log(vendorId)\n        let show = true\n        for (const field of form_fields) {\n            if (show) {\n                console.log('data-' + field.name + ': ', card.getAttribute('data-' + field.name))\n                console.log(\"filter_values[\" + field.name + \"]: \", filter_values[field.name])\n                // const field_is_different_from_card = card.getAttribute('data-' + field.name) !== filter_values[field.name]\n                let card_field = card.getAttribute('data-' + field.name)\n                if (typeof card_field === \"string\") {\n                    card_field = card_field.toLowerCase()\n                }\n                const filter_field = filter_values[field.name]\n\n                const field_is_same_as_card = card_field === filter_field\n                console.log(\"field_is_same_as_card: \", field_is_same_as_card)\n                // const field_is_not_null = filter_values[field.name] !== '' && filter_values[field.name] !== null && filter_values[field.name] !== undefined\n                const field_is_empty = filter_values[field.name] === '' || filter_values[field.name] === null || filter_values[field.name] === undefined || filter_values[field.name] === \"false\"\n                console.log(\"filter_values[field] is null: \", field_is_empty)\n                show = field_is_empty || field_is_same_as_card\n                console.log(\"show: \", show)\n            }\n        }\n\n        if (show) {\n            card.classList.remove('visually-hidden')\n        } else {\n            card.classList.add('visually-hidden')\n        }\n        console.log(\"card.classList: \", card.classList)\n    });\n    // for (const order in order_cards) {\n    //     console.log(\"order: \", order)\n    //     console.log(\"order.dataset.vendorId: \", order.dataset.vendorId)\n    //     console.log(vendorId)\n    //     if (order.dataset.vendorId !== vendorId) {\n    //         console.log(\"different\")\n    //     } else {\n    //         console.log(\"same\")\n    //     }\n    // }\n\n    // const vendor = filter_order_vendor ? filter_order_vendor.value : ''\n    // const customer = filter_order_customer ? filter_order_customer.value : ''\n    // const status = filter_order_status ? filter_order_status.value : ''\n    // const bottle_deposit = filter_order_bottle_deposit ? filter_order_bottle_deposit.checked : ''\n    // const paid = filter_order_paid ? filter_order_paid.checked : ''\n    // const stand_by = filter_order_stand_by ? filter_order_stand_by.checked : ''\n    // const cancelled = filter_order_cancelled ? filter_order_cancelled.checked : ''\n    //\n    // const orders = document.querySelectorAll('.order-snippet')\n    //\n    // for (const order of orders) {\n    //     const vendor_match = vendor === '' || order.dataset.vendor === vendor\n    //     const customer_match = customer === '' || order.dataset.customer === customer\n    //     const status_match = status === '' || order.dataset.status === status\n    //     const bottle_deposit_match = bottle_deposit === '' || order.dataset.bottleDeposit === bottle_deposit\n    //     const paid_match = paid === '' || order.dataset.paid === paid\n    //     const stand_by_match = stand_by === '' || order.dataset.standBy === stand_by\n    //     const cancelled_match = cancelled === '' || order.dataset.cancelled === cancelled\n    //\n    //     if (vendor_match && customer_match && status_match && bottle_deposit_match && paid_match && stand_by_match && cancelled_match) {\n    //         order.classList.remove('visually-hidden')\n    //     } else {\n    //         order.classList.add('visually-hidden')\n    //     }\n    // }\n}\n\n//# sourceURL=webpack://special_orders/./assets/scripts/filters.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/scripts/filters.js"]();
/******/ 	
/******/ })()
;