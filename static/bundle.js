/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/index.js":
/*!*********************************!*\
  !*** ./assets/scripts/index.js ***!
  \*********************************/
/***/ (() => {

eval("// Display New Customer form\nconst btn_new_customer = document.getElementById('btn-new-customer');\nconst btn_existing_customer = document.getElementById('btn-existing-customer');\nconst new_customer_form = document.getElementById('new-customer-form');\nconst existing_customer_form = document.getElementById('existing-customer-form');\n\n// Create a new customer - Replace the customer search with the customer form\nif (btn_new_customer) {\n    btn_new_customer.addEventListener('click', (event) => {\n        $('#id_customer').val(null).trigger('change');\n        new_customer_form.classList.remove('visually-hidden');\n        existing_customer_form.classList.add('visually-hidden');\n        btn_existing_customer.classList.add('btn-secondary');\n        btn_existing_customer.classList.remove('btn-primary');\n        btn_new_customer.classList.add('btn-primary');\n        btn_new_customer.classList.remove('btn-secondary');\n    });\n}\n// Search for a customer - Replace the new customer form with the customer search\nif (btn_existing_customer) {\n    btn_existing_customer.addEventListener('click', (event) => {\n        existing_customer_form.classList.remove('visually-hidden');\n        new_customer_form.classList.add('visually-hidden');\n        btn_new_customer.classList.add('btn-secondary');\n        btn_new_customer.classList.remove('btn-primary');\n        btn_existing_customer.classList.add('btn-primary');\n        btn_existing_customer.classList.remove('btn-secondary');\n    });\n}\n\n\n// More Info button content\nconst btns_order_more_info = document.getElementsByClassName('btn-order-more-info')\n\nfor (const btn of btns_order_more_info) {\n    btn.addEventListener('click', (event) => {\n        if (btn.getAttribute('aria-expanded') === 'true') {\n            btn.children[0].classList.add(\"fa-circle-chevron-up\");\n            btn.children[0].classList.remove(\"fa-circle-chevron-down\");\n        } else {\n            btn.children[0].classList.add(\"fa-circle-chevron-down\");\n            btn.children[0].classList.remove(\"fa-circle-chevron-up\");\n        }\n    });\n}\n\n// Display Bottle Deposit quantity input\nconst bottle_deposit_switch = document.getElementById('has_bottle_deposit');\nconst bottle_deposit_quantity = document.getElementById('bottle-deposit-quantity');\n\nif (bottle_deposit_switch) {\n    bottle_deposit_switch.addEventListener('change', (event) => {\n        bottle_deposit_quantity.classList.toggle('visually-hidden');\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const previousStepButtons = $('.btn-previous-step');\n    for (const button of previousStepButtons) {\n        button.addEventListener('click', function () {\n            const orderId = this.dataset.orderId;\n            updateOrderStatus(orderId, 'previous_step');\n        });\n    }\n\n    const nextStepButtons = $('.btn-next-step');\n    for (const button of nextStepButtons) {\n        button.addEventListener('click', function () {\n            const orderId = this.dataset.orderId;\n            updateOrderStatus(orderId, 'next_step');\n        });\n    }\n});\n\nfunction update_order_snippet(orderId, data) {\n    // Ensure the correct order is updated\n    if (orderId === data.id.toString()) {\n\n        const status = $(\"#status-\" + data.id)[0];\n        if (status) {\n            status.textContent = data.status;\n        }\n        const dateOrdered = $(\"#date-ordered-\" + data.id)[0];\n        if (dateOrdered) {\n            dateOrdered.textContent = data.date_ordered;\n        }\n        const dateReceived = $(\"#date-received-\" + data.id)[0];\n        if (dateReceived) {\n            dateReceived.textContent = data.date_received;\n        }\n        const dateCalled = $(\"#date-called-\" + data.id)[0];\n        if (dateCalled) {\n            dateCalled.textContent = data.date_called;\n        }\n        const datePickedUp = $(\"#date-picked-up-\" + data.id)[0];\n        if (datePickedUp) {\n            datePickedUp.textContent = data.date_picked_up;\n        }\n        const previousStep = $(\"#previous-step-\" + data.id)[0];\n        if (previousStep) {\n            if (data.status_previous_step) {\n                previousStep.textContent = data.status_previous_step;\n                previousStep.parentNode.classList.remove(\"visually-hidden\");\n                if (data.status_previous_step === \"Delete\") {\n                    previousStep.parentNode.setAttribute(\"data-bs-toggle\", \"modal\");\n                    previousStep.parentNode.setAttribute(\"data-bs-target\", \"#delete-order-\" + data.id);\n                } else {\n                    previousStep.parentNode.removeAttribute(\"data-bs-toggle\");\n                    previousStep.parentNode.removeAttribute(\"data-bs-target\");\n                }\n            } else {\n                previousStep.parentNode.classList.add(\"visually-hidden\");\n            }\n        }\n        const nextStep = $(\"#next-step-\" + data.id)[0];\n        if (nextStep) {\n            if (data.status_next_step) {\n                nextStep.textContent = data.status_next_step;\n                nextStep.parentNode.classList.remove(\"visually-hidden\");\n            } else {\n                nextStep.parentNode.classList.add(\"visually-hidden\");\n            }\n        }\n    }\n}\n\nfunction updateOrderStatus(orderId, action) {\n    // TODO Move getCookie() to utils\n    function getCookie(name) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    const csrftoken = getCookie('csrftoken');\n\n    // Send AJAX request to update instance status\n    fetch(`/order_update_status/${orderId}/${action}/`, {\n        method: 'PUT',\n        headers: {\n            'X-CSRFToken': csrftoken,\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(response => response.json())\n        .then(data => {\n            if (data.redirect) {\n                window.location.href = data.redirect;\n            } else {\n                update_order_snippet(orderId, data);\n            }\n\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n}\n\nconst btn_add_customer = document.getElementById('btn-add-customer');\nif (btn_add_customer) {\n    btn_add_customer.addEventListener('click', (event) => {\n        const element = document.getElementById(\"fa-btn-add-customer\");  // Get the DIV element\n\n        if (btn_add_customer.getAttribute('aria-expanded') === 'true') {\n            element.classList.remove(\"fa-circle-plus\");\n            element.classList.add(\"fa-circle-minus\");\n        } else {\n            element.classList.remove(\"fa-circle-minus\");\n            element.classList.add(\"fa-circle-plus\");\n        }\n    });\n}\n\n// Initialize tooltips\nconst tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nconst tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n\n// Display message when memo is required\nconst memo_required_toast = $('#memo-required-toast')[0]\nconst memo_required_toast_triggers = $('.memo_required_toast-btn')\nfor (const trigger of memo_required_toast_triggers) {\n    trigger.addEventListener('change', (e) => {\n        if (e.target.checked) {\n            const toast = new bootstrap.Toast(memo_required_toast)\n            toast.show()\n        }\n    });\n}\n\n\n//# sourceURL=webpack://special_orders/./assets/scripts/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/scripts/index.js"]();
/******/ 	
/******/ })()
;